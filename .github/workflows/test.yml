name: Test

on: [push, pull_request]

jobs:
  test-react:
    name: Test React
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            react:
              - 'packages/react/**'

      - name: Use Node.js
        uses: actions/setup-node@v1
        if: steps.changes.outputs.react == 'true'
        with:
          node-version: '14.x'

      - name: Cache dependencies
        uses: actions/cache@v2
        if: steps.changes.outputs.react == 'true'
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Cypress binary
        uses: actions/cache@v2
        if: steps.changes.outputs.react == 'true'
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      - name: Install dependencies
        if: steps.changes.outputs.react == 'true'
        run: |
          yarn --frozen-lockfile
          yarn lerna run --stream postinstall
          yarn lerna link

      - name: Run Jest tests, collect coverage
        if: steps.changes.outputs.react == 'true'
        run: |
          cd packages/react
          yarn test:ci

      - name: Run Cypress tests, collect coverage
        if: steps.changes.outputs.react == 'true'
        run: |
          cd packages/react
          yarn test:e2e:ci
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          HEIGHT: 900
          WIDTH: 1680

      - name: Copy, combine, and report coverage
        if: steps.changes.outputs.react == 'true'
        run: |
          cd packages/react
          yarn reports

      - name: Coveralls
        uses: coverallsapp/github-action@master
        if: steps.changes.outputs.react == 'true'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: './packages/react/coverage/lcov.info'
          base-path: 'packages/react'

  test-angular:
    name: Test Angular
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            angular:
              - 'packages/angular/**'

      - name: Use Node.js
        uses: actions/setup-node@v1
        if: steps.changes.outputs.angular == 'true'
        with:
          node-version: '14.x'

      - name: Cache dependencies
        uses: actions/cache@v2
        if: steps.changes.outputs.angular == 'true'
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.changes.outputs.angular == 'true'
        run: |
          yarn --frozen-lockfile
          yarn lerna run --stream postinstall
          yarn lerna link

      - name: Run tests, collect coverage
        if: steps.changes.outputs.angular == 'true'
        run: |
          cd packages/angular
          yarn test:ci
